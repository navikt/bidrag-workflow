name: Maven release drafter

on:
  workflow_call:
    inputs:
      publish:
        required: true
        type: boolean
        description: Versjon på pakken som skal publiseres
    outputs:
      published:
        description: "Om pakken er publisert"
        value: ${{ jobs.publish.outputs.published }}
      version:
        description: "Versjon på pakken som ble publisert"
        value: ${{ jobs.publish.outputs.version }}
env:
  publish: ${{github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/dependabot')}}
  GITHUB_USERNAME: x-access-token
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-artifact:
    name: "Build and run tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
          server-password: GITHUB_TOKEN
          server-username: GITHUB_USERNAME
          server-id: github

      - name: Build (and run tests)
        run: mvn -B -q -fae -Dparallel=all -DperCoreThreadCount=true -T 4C clean install

      - name: Save test results
        run: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;

  automerge_dependabot:
    name: "Automerge dependabot patch updates"
    runs-on: ubuntu-latest
    needs: build-artifact
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Enable auto-merge for Dependabot PRs
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  update_release_draft_labels:
    if: github.ref != 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_release_draft:
    needs: build-artifact
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setting version
        id: set_version
        run: |
          export GIT_COMMIT_DATE=$(git log -1 --pretty='%ad' --date=format:'%Y.%m.%d.%H%M%S')
          export VERSION=${GIT_COMMIT_DATE}
          echo "VERSION=${GIT_COMMIT_DATE}" >> $GITHUB_ENV
          echo "Setting version $VERSION"
      - uses: release-drafter/release-drafter@v5
        with:
          version: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          publish: ${{ env.publish }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ env.VERSION }}
      published: ${{ env.publish == true }}

  publish:
    needs: update_release_draft
    if: ${{ needs.update_release_draft.outputs.published }}
    permissions:
      contents: "write"
      id-token: "write"
      packages: "write"
    name: Publish package
    uses: ./.github/workflows/maven_publish.yaml
    with:
      version: ${{ needs.update_release_draft.outputs.version }}
    secrets: inherit