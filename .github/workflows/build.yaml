name: Bygg og test
on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: 21
        description: Hvilken versjon av java applikasjonen skal bygges med
      produksjon:
        required: false
        type: boolean
        default: false
        description: Skal være true hvis det skal deployes til produksjon
      nais_cluster:
        required: false
        type: string
        default: gcp
        description: Nais cluster som applikasjonen skal deployes til. Skal enten være 'gcp' eller 'fss'
      nais_variabler_filnavn:
        required: false
        type: string
        default: feature.yaml
        description: Navnet på miljøvariabler filen som skal brukes ved deploy. Parameter skal inkludere filending som feks .yaml
      nais_hovedfil_navn:
        required: false
        type: string
        default: nais.yaml
        description: Navnet på nais filen som skal brukes. Parameter skal inkludere filending og evt path om det ikke ligger på root i .nais folder.
      maven_options:
        required: false
        type: string
        default: -B -q -fae
        description: Ekstra options ved kjøring av maven bygget. Dette kan være lag eller profiler. Default -B (Batchmode, non-interactive), -q (Quiet, kun logging ved errors), -fae (Fail at end).
      maven_test_lifecycle:
        required: false
        type: string
        default: test
        description: Mulighet for å endre hvilken maven lifecycle som kjøres sammen med testene. For å kunne kjøre integrasjonstester må verify/install/deploy brukes.
      ktlint_options:
        required: false
        type: string
        description: Ektra parametere ved kjøring av ktlint.
      dockerfile_with_path:
        required: false
        type: string
        default: Dockerfile
        description: Kan settes for å spesifisere path for dockerfile.
      docker_context:
        required: false
        type: string
        default: .
        description: Kan settes for å spesifisere docker context for build files.
      image_suffix:
        required: false
        type: string
        description: Suffix for docker image om det er multimodul repo.
      tag:
        required: false
        type: string
        description: Custom docker tag
    outputs:
      docker_image:
        description: "Docker Image navnet som blir deployet til miljø"
        value: ${{ jobs.build.outputs.image }}
      docker_tag:
        description: "Docker tag som blir deployet til miljø"
        value: ${{ jobs.build.outputs.tag }}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CLUSTER: ${{ inputs.produksjon && 'prod' || 'dev' }}-${{ inputs.nais_cluster }}

jobs:
  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
      - uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "x-access-token", 
                "password": "${{secrets.GITHUB_TOKEN}}"
              },
              {
                "id": "github2",
                "username": "x-access-token", 
                "password": "${{secrets.GITHUB_TOKEN}}"
              }
            ]
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Bygg uten test
        if: ${{ inputs.produksjon == false }}
        run: mvn -Dmaven.test.skip=true ${{ inputs.maven_options }} clean install
      - name: Bygg med test
        if: ${{ inputs.produksjon == true }}
        run: mvn ${{ inputs.maven_options }} clean install
      - uses: nais/docker-build-push@v0
        if: github.actor != 'dependabot[bot]'
        id: docker-push
        with:
          team: bidrag
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          dockerfile: ${{ inputs.dockerfile_with_path }}
          docker_context: ${{ inputs.docker_context }}
          image_suffix: ${{ inputs.image_suffix }}
          tag: ${{ inputs.tag }}
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
      tag: ${{ steps.docker-push.outputs.tag }}

  run-tests:
    runs-on: ubuntu-latest
    name: Kjør tester
    if: ${{ inputs.produksjon == false }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
      - uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "x-access-token", 
                "password": "${{secrets.GITHUB_TOKEN}}"
              },
              {
                "id": "github2",
                "username": "x-access-token", 
                "password": "${{secrets.GITHUB_TOKEN}}"
              }
            ]
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn ${{ inputs.maven_options }} ${{ inputs.maven_test_lifecycle }}

  run-ktlint:
    runs-on: ubuntu-latest
    name: Verifiser formatering med ktlint
    if: ${{ inputs.produksjon == false }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'
      - uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: |
            [
              {
                "id": "github",
                "username": "x-access-token", 
                "password": "${{secrets.GITHUB_TOKEN}}"
              },
              {
                "id": "github2",
                "username": "x-access-token", 
                "password": "${{secrets.GITHUB_TOKEN}}"
              }
            ]
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn antrun:run@ktlint ${{ inputs.ktlint_options }}
